name: merge

on:
  workflow_dispatch:
    
  schedule:
    - cron: '5 */4 * * *'

jobs:
  run_python_script:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # 执行完全克隆
      
    - name: Set Git Identity
      run : |
        sudo timedatectl set-timezone "Asia/Shanghai"
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"

    - name: Set up Python
      uses: actions/setup-python@v5 
      with:
        python-version: 3.x

    - name: Install dependencies
      run: |
        pip install requests

    - name: Run Python script
      run: python ./fan/main.py

    - id: check
      name: Check for changes
      run: |
        rm -rf tmp
        rm -rf ./fan/cls/__pycache__
        git add .
        git commit -m "update" --allow-empty

    - name: Push changes
      if: steps.check.conclusion == 'success'
      uses:  ad-m/github-push-action@master
      with:
         github_token: ${{ secrets.GITHUB_TOKEN }}
         branch: main

    - name: Push Gitee
      run: |
        git add ./b.json
        git add ./fatcat.json
        git add ./jar
        git add ./js
        git add ./json
        git add ./lib
        git commit ./b.json ./fatcat.json ./jar ./json ./lib -m [更新完成]
        git push -f origin

    - name: Push JS Config Changes To Gitee
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GE_TOKEN }}
        repository: MINGERTAI/new
        directory: .
        branch: master
        force: true
        github_url: https://gitee.com
      env:
        GITHUB_ACTOR: ${{ secrets.GH_ACTOR }}

    # 利用action把build好的文件上传到服务器/var/www/app路径下,需要确认此目录已在服务端创建
    #- name: 上传文件
      #uses: wlixcc/SFTP-Deploy-Action@v1.2.4
      #with:
          #username: ${{ secrets.FTP_USERNAME }}   # ssh user name  root
          #server: ${{ secrets.FTP_SERVER }}       # 引用之前创建好的secret
          ## ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }} #引用之前创建好的secret
          #port: ${{ secrets.FTP_PORT }}
          #local_path: './tv/0/*'                  # 对应我们项目build的文件夹路径
          #remote_path: '${{ secrets.FTP_TV }}'             # 远程路径
          #sftp_only: true
          #password: ${{ secrets.FTP_PASSWORD }}   # ssh 密码

    - name: Delete Workflow Runs
      uses: Mattraks/delete-workflow-runs@main
      continue-on-error: true
      with:
        token: ${{ github.token }}
        repository: ${{github.repository}}
        retain_days: 0
        keep_minimum_runs: 1
